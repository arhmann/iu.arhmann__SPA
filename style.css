html{font-family:sans-serif;line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,footer,header,nav,section{display:block}h1{font-size:2em;margin:.67em 0}figcaption,figure,main{display:block}figure{margin:1em 40px}hr{-webkit-box-sizing:content-box;box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent;-webkit-text-decoration-skip:objects}a:active,a:hover{outline-width:0}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:inherit}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}dfn{font-style:italic}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}audio,video{display:inline-block}audio:not([controls]){display:none;height:0}img{border-style:none}svg:not(:root){overflow:hidden}button,input,optgroup,select,textarea{font-family:sans-serif;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=reset],[type=submit],button,html [type=button]{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{-webkit-box-sizing:border-box;box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{display:inline-block;vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{-webkit-box-sizing:border-box;box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details,menu{display:block}summary{display:list-item}canvas{display:inline-block}template{display:none}[hidden]{display:none}@font-face{font-family:Golos;font-style:normal;font-weight:400;src:local(""),url(assets/fonts/Golos_Text_Regular.woff2) format("woff2"),url(assets/fonts/Golos_Text_Regular.woff) format("woff")}@font-face{font-family:Golos;font-style:normal;font-weight:500;src:local(""),url(assets/fonts/Golos_Text_Medium.woff2) format("woff2"),url(assets/fonts/Golos_Text_Medium.woff) format("woff")}@font-face{font-family:Golos;font-style:normal;font-weight:600;src:local(""),url(assets/fonts/Golos_Text_DemiBold.woff2) format("woff2"),url(assets/fonts/Golos_Text_DemiBold.woff) format("woff")}@font-face{font-family:Golos;font-style:normal;font-weight:700;src:local(""),url(assets/fonts/Golos_Text_Bold.woff2) format("woff2"),url(assets/fonts/Golos_Text_Bold.woff) format("woff")}.hover-effect:hover{-webkit-box-shadow:0 14px 28px rgba(0,0,0,.25),0 10px 10px rgba(0,0,0,.22);box-shadow:0 14px 28px rgba(0,0,0,.25),0 10px 10px rgba(0,0,0,.22);-webkit-transition:all .25s;transition:all .25s}body{color:#000;font-family:Manrope,"Open Sans","Helvetica Neue Light","Helvetica Neue",Helvetica,Arial,sans-serif;font-size:18px;font-weight:400;line-height:1.67}button,optgroup,select{font-family:Manrope,"Open Sans","Helvetica Neue Light","Helvetica Neue",Helvetica,Arial,sans-serif;font-size:18px}input,textarea{font-family:Manrope,"Open Sans","Helvetica Neue Light","Helvetica Neue",Helvetica,Arial,sans-serif;font-size:24px}.h1{text-transform:uppercase;font-size:45px;line-height:1.6}.h2{font-size:20px;line-height:1.2;text-transform:uppercase}.h3{text-transform:uppercase;font-size:15px;line-height:1.3}.h4{text-transform:uppercase;font-size:14px;line-height:1.3}html{-webkit-box-sizing:border-box;box-sizing:border-box;overflow-x:hidden}*,::after,::before{-webkit-box-sizing:inherit;box-sizing:inherit}body{min-width:375px;-webkit-font-smoothing:antialiased;scroll-behavior:smooth;margin:0;padding-right:0}h1,h2,h3,h4,h5,li,p,ul{margin:0;padding:0}ul{list-style-type:none}img{display:block;max-width:100%;height:auto}img.fit{display:block;width:100%;height:100%;-o-object-fit:cover;object-fit:cover}.hidden{display:none}button,input,optgroup,select,textarea{border:none;color:#000;background-image:none;background-color:transparent;-webkit-box-shadow:none;box-shadow:none;outline:0}input.text,input[type=button],input[type=email],input[type=search],input[type=submit],input[type=text],textarea{-webkit-appearance:none}button,input[type=reset],input[type=submit]{background:0 0;color:inherit;border:none;padding:0;font:inherit;cursor:pointer;outline:inherit}a{text-decoration:none;color:inherit}svg{display:block}.container{max-width:1280px;margin-right:auto;margin-left:auto;padding:0 20px}.row{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-flex:0;-ms-flex:0 1 auto;flex:0 1 auto;-ms-flex-wrap:wrap;flex-wrap:wrap}@media only screen and (max-width:1279px){.container{max-width:912px}}@media only screen and (max-width:991px){.container{max-width:748px}}@media only screen and (max-width:767px){.container{max-width:100%}}.input{padding:17px 18px 20px;width:100%;height:48px;font-size:13px;-webkit-box-sizing:border-box;box-sizing:border-box;background-color:#f4f7f6;border:none;margin-bottom:0}.search__btn{display:-webkit-box;display:-ms-flexbox;display:flex;padding:0;width:50px;height:49px;background-image:url(https://netology-code.github.io/html-2-diploma/sources/images/search.svg);background-color:#b59f5b;background-repeat:no-repeat;background-size:20px;background-position:center}.btn{width:100%;padding:13px 0;background-color:#b59f5b;font-size:14px;color:#fff}.header__nav .header__items:hover{border-bottom:3px solid #fcac45;-webkit-box-shadow:0 14px 28px rgba(0,0,0,.25),0 10px 10px rgba(0,0,0,.22);box-shadow:0 14px 28px rgba(0,0,0,.25),0 10px 10px rgba(0,0,0,.22);-webkit-transition:all .25s;transition:all .25s}.header__nav .header__list{padding-top:12px;margin-right:20px;color:#fff;z-index:1}.header__nav .header__list:not(:last-child){margin-right:0}.header{background-image:url(https://netology-code.github.io/html-2-diploma/sources/images/banner-bg.jpg);background-repeat:no-repeat;background-position:center center;background-size:cover;background-color:#000;position:relative;padding-top:28px;padding-bottom:28px}.header:after{content:"";background-color:#000;position:absolute;left:0;top:0;bottom:0;right:0;opacity:.6}.header__topline{position:relative;z-index:1}.header__noemi-svg{width:180px}.header__nav{margin-left:auto}.header__title{z-index:1;position:relative;max-width:800px;margin:0 auto;color:#fff;padding-top:75px;padding-bottom:143px;text-align:center}.header__items{margin-right:20px}.content{padding:70px 0 20px}.content .content__blogs,.content img{border-radius:2%}.content .containter{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.content__blogs{width:785px;display:-webkit-box;display:-ms-flexbox;display:flex;margin-bottom:70px}.content__blogs .content__blog{margin-left:30px;max-width:367px}.content__blogs .content__blog .content__times-wrapper{margin-top:21px}.content__blogs .content__blog .content__text{margin-top:20px;max-width:300px;font-size:16px;line-height:1.4}.content__blogs .content__blog .content__title{line-height:1.2;text-align:left}.content__blogs .content__blog .content__items-tags{font-size:14px;color:#b59f5b;margin-left:18px;text-transform:uppercase;margin-bottom:20px}.content__blogs .content__blog .content__category{margin-right:20px}.content__posts{margin-left:auto;max-width:320px}.content__posts .sidebar{width:280px}.content__posts .posts__title{margin-bottom:24px;text-align:center}.content__posts .posts__title:after{content:"";display:block;margin-right:auto;margin-left:auto;height:3px;width:66px;margin-top:14px;background-color:#e1d9bd}.content__posts .posts__time-title-wr{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;margin-left:20px}.content__posts .posts__card{margin-bottom:40px}.content .content__search{margin-bottom:40px;position:relative}.content .newsletter__title{margin-bottom:24px;text-align:center}.content .newsletter__title:after{content:"";display:block;margin-right:auto;margin-left:auto;height:3px;width:66px;margin-top:14px;background-color:#e1d9bd}.content .newsletter__subscription{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.content .newsletter__btn{margin:10px auto}.content .newsletter__btn{margin-bottom:40px}.content .search__group{width:100%}.content .search__btn{position:absolute;right:0}.content .content__tags-title{margin-bottom:24px;text-align:center}.content .content__tags-title:after{content:"";display:block;margin-right:auto;margin-left:auto;height:3px;width:66px;margin-top:14px;background-color:#e1d9bd}.content .content__tags-list{display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-align:start;-ms-flex-align:start;align-items:flex-start;max-width:300px;margin-bottom:40px}.content .categ-title{margin-bottom:24px;text-align:center;color:#0f0d0e}.content .categ-title:after{content:"";display:block;margin-right:auto;margin-left:auto;height:3px;width:66px;margin-top:14px;background-color:#e1d9bd}.content .categ__item{padding:12px 0;border-bottom:1px solid #eee}.content__variables{display:inline-block;padding:4px 12px;border:3px solid #eee;font-size:12px;color:#0f0d0e;margin:5px}.footer .footer__img-wrapper{background-color:#f4f7f6}.footer_imges{width:350px;padding:20px 0 20px;display:-webkit-box;display:-ms-flexbox;display:flex;margin:0 auto}.footer__list{margin:10px auto}.footer__logo-git{width:40px}.footer__copyright-wr{margin:10px auto}.footer__logo-fb{height:27px}.footer__logo-mail{height:25px}.footer__logo-fb{color:#00f}.footer__copyright{width:450px;margin:20px auto 20px;display:-webkit-box;display:-ms-flexbox;display:flex}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
